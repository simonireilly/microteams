name: Build, Lint, Test and Deploy
on: pull_request
env:
  AWS_REGION: "eu-west-1"

permissions:
  id-token: write
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v1

      - uses: actions/setup-node@v2
        with:
          node-version: "14"

      - run: yarn install

      - run: yarn l build
      - run: yarn l lint
      - run: yarn l test

  deploy-infrastructure:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v1

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: arn:aws:iam::322567890963:role/github-ci-role
          aws-region: ${{ env.AWS_REGION }}

      - uses: actions/setup-node@v2
        with:
          node-version: "14"

      - run: yarn install

      - name: Synth infrastructure stack
        run: yarn --cwd packages/infrastructure cdk synth

      - name: Deploy infrastructure stack
        run: yarn --cwd packages/infrastructure cdk deploy --require-approval never

  deploy-services:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [webapp]

    steps:
      - name: Git clone the repository
        uses: actions/checkout@v1

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: arn:aws:iam::322567890963:role/github-ci-role
          aws-region: ${{ env.AWS_REGION }}

      - uses: actions/setup-node@v2
        with:
          node-version: "14"

      - run: yarn install

      - name: Synth services stack ${{ matrix.service }}
        run: yarn --cwd packages/services/${{ matrix.service }} cdk synth

      - name: Deploy services stack ${{ matrix.service }}
        run: yarn --cwd packages/services/${{ matrix.service }} cdk deploy --require-approval never

    needs: [test, deploy-infrastructure]
